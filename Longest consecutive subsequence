N = 7
a[] = {2,6,1,9,4,5,3}
Output:
6
Explanation:
The consecutive numbers here
are 1, 2, 3, 4, 5, 6. These 6 
numbers form the longest consecutive
subsquence.








class Solution
{   
    // arr[] : the input array
    // N : size of the array arr[]
    
    //Function to return length of longest subsequence of consecutive integers.
	static int findLongestConseqSubseq(int arr[], int N)
	{
	   // add your code here
	   Arrays.sort(arr);
	   int c=0;
	   int max =0;
	   for(int i=0;i<arr.length-1;i++){
	       if(arr[i+1] - arr[i] == 1){
	           c++;
	       }
	       else if(arr[i+1] - arr[i] == 0){
	           continue;
	       }
	       else{
	           if(c > max){
	               max = c;
	           }
	           c =0;
	       }
	   }
	   return Math.max(c,max)+1;
	}
}
