n = 6, X = 13
arr[] = [1 4 45 6 10 8]
Output:
1
Explanation:
The triplet {1, 4, 8} in 
the array sums up to 13.






class Solution
{
    //Function to find if there exists a triplet in the 
    //array A[] which sums up to X.
    public static boolean find3Numbers(int A[], int n, int X) { 
    
       // Your code Here
       Arrays.sort(A);
       for(int i=0;i<n;i++){
           int low=i+1; int high=n-1;
           while(low < high){
               int sum = A[i] + A[low] +A[high];
               if(sum == X){
                   return true;
               }
               else if(sum < X){
                   low++;
               }
               else {
                   high--;
               }
           }
       }
    return false;
    }
}
